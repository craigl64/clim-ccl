
%% ****************************************** SWM things


% Silica back-ends
  * [swm] Genera
    - Get the basic port working.
    - When a sheet has only a TOP-LEVEL-SHEET as its parent, and overlaps no
      other sheet, mirror it.
    - Mirrored sheets on Genera should use Genera scroll bars.
  * [swm] Raw CLX

% Holes to fill in
  * [swm] Protocol for deciding whether PROMPT-FOR-ACCEPT should or not.
  * [swm] Complete abstract gadgets.
    - Take whatever is needed from ILA CLIM in order to get the non-adaptive
      gadgets together.
    - Most gadgets should use temporary mediums.
    - Do some graphic design work (but not too much :-).
  * [swm] Write a "null" frame manager that implements the same look and feel
    for all ports.
    - Genera's frame manager will inherit from this.
  * [swm] Implement the keyboard gesture stuff, modelled after ILA CLIM.
    - Flush the EXTENDED-CHAR type at the same time.
  * [swm] Stream defprotocols: be sure that all of the sheet and medium protocol
    functions are explicitly defined with DEFOPERATION so that the stream
    trampolines are properly created. 
    - TEXT-STYLE-xxx in TEXT-STYLE.LISP
    - SHEET-xxx in GADGET-OUTPUT.LISP
    - MEDIUM-DRAW-xxx in STREAM-DEFPROTOCOLS.LISP
    - WINDOW-xxx in STREAM-DEFPROTOCOLS.LISP
  * Temporary-medium sheets.
    - [swm] Medium accessors on a sheet with no medium?
  * [swm] Implement compatibility code for CLIM 1.0's :LAYOUT language.
  * [swm] Should we divide the drawing protocol into a medium and a port layer,
    or should it be a single layer as Bill suggests? 
  * [swm] Spiff up the code for defining new graphics operators.
    - DEFINE-GRAPHICS-OPERATOR is like DEFGENERIC.
    - DEFINE-GRAPHICS-METHOD is like DEFMETHOD.
    - DEFINE-GRAPHICS-RECORDING.
    - What of this goes into the spec?
  * [swm] Figure out what things are part of the frame manager protocol and
    which are part of the port protocol.
    - PORT-MENU-CHOOSE should really be FRAME-MANAGER-MENU-CHOOSE.
    - Ditto, PORT-DIALOG-VIEW.
  * [swm] Figure out which things are part of the medium protocol and which are
    part of the port protocol.
    - Should we divide the drawing protocol into a medium and a port layer, or
      should it be a single layer as Bill suggests?  (That is, do we need to
      flush PORT-DRAW-xxx?)
    - Ditto, COPY-AREA.
  * [swm] Figure out what things are part of the graft ("console"? "display"?)
    protocol  and which are part of the port protocol.
  * [swm] Figure out how views really interact with frame managers and dialogs. 
    - Indirect views. 
  * [swm] Reinstate clipping regions
    - For output records
  * [swm] Implement more of DRAW-DESIGN for composites.  
    - Create a table that describes what works and what doesn't, for each port.
  * [swm] Figure out which WINDOW-xxx functions from CLIM 1.0 make sense.  It's
    OK to change the names to correspond to newthink.
    - WINDOW-VIEWPORT => PANE-VIEWPORT-REGION
    - WINDOW-VIEWPORT-POSITION* and WINDOW-SET-VIEWPORT-POSITION*.
    - WINDOW-INSIDE-xxx and WINDOW-SET-INSIDE-xxx.

% Cleanups
  * [swm] What should we retain from previous versions of CLIM?
    - Go through CLIM 1.0 to make sure we didn't miss anything.
    - Go through ILA CLIM with a fine-tooth comb.
  * [swm] Flush all of the DRAW-xxx-INTERNAL junk.
  * [swm] Do we use PORT-WRITE-CHAR-1 and PORT-WRITE-STRING-1 anywhere?
  * [swm] Find all the #+Silica/#-Silica stuff.
    - Make sure that the #+Silica branch really does the right thing.
    - Flush the #-Silica branch.
  * [swm] Must we really convert all of the code to lowercase?  Do it if we must.

% Bugs to fix
  * [swm] Missing graphics operators, to be taken from CLIM 1.0.
    - DRAW-ARROW[*]
    - DRAW-OVAL[*]
    - Spiff up DRAW-POINTS[*] and DRAW-LINES[*]
  * [swm] Rectangles and bboxes don't do region arithmetic with each other.
    - STANDARD-BOUNDING-RECTANGLE should inherit from STANDARD-RECTANGLE.
    - All region classes should have slots of type COORDINATE, but be sure that
      the constructors do the necessary coercions.
  * Cursors are just plain buggy.
    - [swm] Make the Genera port use native cursors when possible.

% Performance
  * [swm] Simplify transformation classes so that there is a single class of
    transformation.  Special-case +IDENTITY-TRANSFORMATION+. 
  * [swm] Make use of volatile transformations.
    - Be careful never to modify +IDENTITY-TRANSFORMATION+.
  * [swm] Make use of volatile rectangular regions for sheets.
  * [swm] Reinstate sheet region and transformation caches (as in ILA CLIM).
  * [swm] Use resourced events to save consing.
    - This means events are volatile, so we need COPY-EVENT in the API.
    - Keep a speedy resource of 10 or so of each kind of event.
  * [swm] (deftype coordinate () ...)
    - Flush all inappropriate FIXNUM declarations from the code and replace them
      with the new COORDINATE declaration.
    - Look at callers of FLOOR, CEILING, TRUNCATE, and ROUND, and decide what of
      those really mean to coerce to the COORDINATE type.
    - The per-port code will needs to "devicize" all coordinates.  For example,
      for CLX that means integerizing, but not for PostScript.

% Size issues
  * [swm] Modularize with load on demand/required modules
    - Extended geometry (lines, ellipses, polygons).
    - DRAW-DESIGN and MAKE-DESIGN-FROM-OUTPUT-RECORD.
    - Some formatted output stuff: graph formatting, FILLING-OUTPUT.

% [swm] Specification
  * Write up the Silica API and protocol.
  * Write up the gadget API and protocol.
    - Document new callback function architecture.
  * Specify and implement DEFINE-PANE-TYPE.
    - Implement all of the CLIM 1.0 pane types.
  * Write up the application frame and pane API and protocol.
    - Include the layout protocol.
    - What about RWK's "mosaics"?
  * Rename all of the "POSITION*" functions to "POSITION", because a "position"
    is unambiguously an (X,Y) pair.  That is, POSITION, POSITION*, and POINT*
    all mean the same thing. 
    - Update the code accordingly.
  * What happens when you draw on a sheet that is not grafted?
  * Who enables a frame?
    - RUN-FRAME-TOP-LEVEL?
    - or DEFAULT-FRAME-TOP-LEVEL?
    - The "command loop" proposal needs to explicitly address this.
  * Who calls REALIZE-MIRROR?
  * ENABLE-MIRROR and ENABLE->MIRROR, MIRROR->ENABLE?
  * SHEET-REGION/TRANSFORMATION can change for two reasons: program does a SETF
    or the port sends a configure notify.  Should we use that :PORT-TRIGGER
    keyword in the notification protocol? 
  * Enumerate the implicit inputs to all functions.
    - *APPLICATION-FRAME*
    - *INPUT-CONTEXT* and *NULL-PRESENTATION*
    - *COMMAND-PARSER*, *COMMAND-UNPARSER*, and *PARTIAL-COMMAND-PARSER*
    - *UNSUPPLIED-ARGUMENT-MARKER* and *NUMERIC-ARGUMENT-MARKER*
    - *NUMERIC-ARGUMENT*
    - *DELIMITER-GESTURES* and *ACTIVATION-GESTURES*
    - *COMPLETION-GESTURES*, *HELP-GESTURES*, and *POSSIBILITIES-GESTURES*
    - *ABORT-GESTURES* and *ACCELERATOR-GESTURES*
    - *INPUT-WAIT-TEST* and *INPUT-WAIT-HANDLER*
    - *POINTER-BUTTON-PRESS-HANDLER*
    - *DEFAULT-TEXT-STYLE*, *NULL-TEXT-STYLE*, and *UNDEFINED-TEXT-STYLE*
  * Unify the sheet and output record protocols by giving the same name to
    generic functions that (conceptually) do the same thing.  This could lay the
    groundwork for tighter unification later, and costs us very little.
    - SHEET-ADOPT-CHILD and ADD-OUTPUT-RECORD
    - SHEET-DISOWN-CHILD and DELETE-OUTPUT-RECORD
    - SHEET-PARENT and OUTPUT-RECORD-PARENT
    - SHEET-CHILDREN and OUTPUT-RECORD-CHILDREN
    - The mapping functions.
    - SHEET-REGION and BOUNDING-RECTANGLE*
    - What else?




%%%%%%%%%%%%%%%%% Unassigned things

% Silica back-ends
  * [???] PostScript

% Cleanups
 

% Holes to fill in
  * Temporary-medium sheets.
    - Medium accessors on a sheet with no medium?
    - [all] Temporary medium need to have their state decached.  This looks like
      it should be a method on deallocate-medium since the medium is not
      degrafted.  Just not associated with a window.  This does not seem nice:
      engraft, degraft, deallocate? 

% Performance

% Performance things

% User Guide.

% Demos and example code.

% Franz specific stuff.

% [todo: /vapor/usr/tech/cer/todo/franz-clim.todo]
